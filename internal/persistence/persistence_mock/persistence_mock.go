// Code generated by MockGen. DO NOT EDIT.
// Source: persistence.go

// Package persistence_mock is a generated GoMock package.
package persistence_mock

import (
	reflect "reflect"
	models "github.com/jeffy-mathew/sliding-window-rate-limiter/internal/models"

	gomock "github.com/golang/mock/gomock"
)

// MockPersistence is a mock of Persistence interface.
type MockPersistence struct {
	ctrl     *gomock.Controller
	recorder *MockPersistenceMockRecorder
}

// MockPersistenceMockRecorder is the mock recorder for MockPersistence.
type MockPersistenceMockRecorder struct {
	mock *MockPersistence
}

// NewMockPersistence creates a new mock instance.
func NewMockPersistence(ctrl *gomock.Controller) *MockPersistence {
	mock := &MockPersistence{ctrl: ctrl}
	mock.recorder = &MockPersistenceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPersistence) EXPECT() *MockPersistenceMockRecorder {
	return m.recorder
}

// Dump mocks base method.
func (m *MockPersistence) Dump(counters map[string][]models.Entry) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Dump", counters)
	ret0, _ := ret[0].(error)
	return ret0
}

// Dump indicates an expected call of Dump.
func (mr *MockPersistenceMockRecorder) Dump(counters interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Dump", reflect.TypeOf((*MockPersistence)(nil).Dump), counters)
}

// Load mocks base method.
func (m *MockPersistence) Load() (map[string][]models.Entry, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Load")
	ret0, _ := ret[0].(map[string][]models.Entry)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Load indicates an expected call of Load.
func (mr *MockPersistenceMockRecorder) Load() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Load", reflect.TypeOf((*MockPersistence)(nil).Load))
}
